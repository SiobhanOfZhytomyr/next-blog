{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nexport const getPosts = async () => {\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts`);\n  const ids = res.data.map(post => post.id);\n  return await Promise.all(ids.map(async elem => {\n    const content = await axios({\n      method: \"GET\",\n      url: `https://simple-blog-api.crew.red/posts/${elem}`,\n      params: {\n        _embed: \"comments\"\n      }\n    });\n    return content.data;\n  }));\n};\nexport const postComment = comment => {\n  return axios({\n    method: \"POST\",\n    url: \"https://simple-blog-api.crew.red/comments\",\n    data: _objectSpread({}, comment)\n  }).then(res => res.data);\n};\nexport const postPost = post => {\n  return axios({\n    method: \"POST\",\n    url: \"https://simple-blog-api.crew.red/posts\",\n    data: _objectSpread({}, post)\n  }).then(res => res.data);\n};","map":{"version":3,"sources":["/home/nik/projects/js/next-blog/lib/api.ts"],"names":["axios","getPosts","res","get","ids","data","map","post","id","Promise","all","elem","content","method","url","params","_embed","postComment","comment","then","postPost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAW,wCAAX,CAAlB;AACA,QAAMC,GAAQ,GAAGF,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAA5B,CAAjB;AACA,SAAO,MAAMC,OAAO,CAACC,GAAR,CACXN,GAAG,CAACE,GAAJ,CAAQ,MAAOK,IAAP,IAAgB;AACtB,UAAMC,OAAO,GAAG,MAAMZ,KAAK,CAAC;AAC1Ba,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,GAAG,EAAG,0CAAyCH,IAAK,EAF1B;AAG1BI,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AADF;AAHkB,KAAD,CAA3B;AAOA,WAAOJ,OAAO,CAACP,IAAf;AACD,GATD,CADW,CAAb;AAYD,CAfM;AAiBP,OAAO,MAAMY,WAAW,GAAIC,OAAD,IAAyB;AAClD,SAAOlB,KAAK,CAAC;AACXa,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,2CAFM;AAGXT,IAAAA,IAAI,oBACCa,OADD;AAHO,GAAD,CAAL,CAMJC,IANI,CAMEjB,GAAD,IAASA,GAAG,CAACG,IANd,CAAP;AAOD,CARM;AAUP,OAAO,MAAMe,QAAQ,GAAIb,IAAD,IAAmB;AACzC,SAAOP,KAAK,CAAC;AACXa,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,wCAFM;AAGXT,IAAAA,IAAI,oBACCE,IADD;AAHO,GAAD,CAAL,CAMJY,IANI,CAMEjB,GAAD,IAASA,GAAG,CAACG,IANd,CAAP;AAOD,CARM","sourcesContent":["import axios from \"axios\";\nimport { Posts } from \"./types\";\nimport { Ids, RawComment, RawPost } from \"./types\";\n\nexport const getPosts = async () => {\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts`);\n  const ids: Ids = res.data.map((post) => post.id);\n  return await Promise.all<Posts>(\n    ids.map(async (elem) => {\n      const content = await axios({\n        method: \"GET\",\n        url: `https://simple-blog-api.crew.red/posts/${elem}`,\n        params: {\n          _embed: \"comments\",\n        },\n      });\n      return content.data;\n    })\n  );\n};\n\nexport const postComment = (comment: RawComment) => {\n  return axios({\n    method: \"POST\",\n    url: \"https://simple-blog-api.crew.red/comments\",\n    data: {\n      ...comment,\n    },\n  }).then((res) => res.data);\n};\n\nexport const postPost = (post: RawPost) => {\n  return axios({\n    method: \"POST\",\n    url: \"https://simple-blog-api.crew.red/posts\",\n    data: {\n      ...post,\n    },\n  }).then((res) => res.data);\n};\n"]},"metadata":{},"sourceType":"module"}