{"ast":null,"code":"var _jsxFileName = \"/home/nik/projects/js/next-blog/pages/posts/[postId].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nexport default function Post() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var postId = router.query.postId;\n  var num = +postId;\n  var data = useSelector(function (state) {\n    return state.posts.find(function (post) {\n      return post.id === num;\n    });\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, data.title, \", id - \", data.id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, data.body), !data.comments.length ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"gfbdfgbNo comments yet\") : __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, data.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, comment.body);\n  })), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Back to home\")));\n}\n\n_s(Post, \"ttX8Q1iCXXtfHDvZGEqfRA2yxYI=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/nik/projects/js/next-blog/pages/posts/[postId].tsx"],"names":["useSelector","useRouter","Link","Post","router","postId","query","num","data","state","posts","find","post","id","title","body","comments","length","map","comment"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAD6B,MAErBI,MAFqB,GAEVD,MAAM,CAACE,KAFG,CAErBD,MAFqB;AAG7B,MAAME,GAAW,GAAG,CAACF,MAArB;AACA,MAAMG,IAAI,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WACvBA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYN,GAAtB;AAAA,KAAjB,CADuB;AAAA,GAAD,CAAxB;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACM,KADR,aACsBN,IAAI,CAACK,EAD3B,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACO,IAAT,CAJF,EAKG,CAACP,IAAI,CAACQ,QAAL,CAAcC,MAAf,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,CAACQ,QAAL,CAAcE,GAAd,CAAkB,UAACC,OAAD;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACN,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBM,OAAO,CAACJ,IAA9B,CADiB;AAAA,GAAlB,CADH,CARJ,EAqBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CArBF,CADF;AA2BD;;GAlCuBZ,I;UACPF,S,EAGFD,W;;;KAJSG,I","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { State } from \"../../redux/store/store\";\nexport default function Post() {\n  const router = useRouter();\n  const { postId } = router.query;\n  const num: number = +postId;\n  const data = useSelector((state: State) =>\n    state.posts.find((post) => post.id === num)\n  );\n  return (\n    <div>\n      <h1>\n        {data.title}, id - {data.id}\n      </h1>\n      <p>{data.body}</p>\n      {!data.comments.length ? (\n        <p>gfbdfgbNo comments yet</p>\n      ) : (\n        <ul>\n          {data.comments.map((comment) => (\n            <li key={comment.id}>{comment.body}</li>\n          ))}\n        </ul>\n      )}\n      {/* {data.comments.length && (\n        <ul>\n          {data.comments.map((comment) => (\n            <li key={comment.id}>{comment.body}</li>\n          ))}\n        </ul>\n      )} */}\n      <Link href=\"/\">\n        <a>Back to home</a>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}