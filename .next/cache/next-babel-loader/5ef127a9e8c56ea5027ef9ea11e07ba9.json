{"ast":null,"code":"var _jsxFileName = \"/home/nik/projects/js/next-blog/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container } from \"../components/Container\";\nimport { getAllPosts } from \"../redux/store/store\";\nimport Link from \"next/link\";\nimport { getPosts } from '../lib/api';\n\nfunction HomePage({\n  data\n}) {\n  const posts = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const handlePopulate = () => {\n      const prep = Array.from(new Set([...posts, ...data]));\n      console.log(prep);\n      dispatch(getAllPosts(prep));\n    };\n\n    handlePopulate();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/posts/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Create new post\")), __jsx(Container, {\n    posts: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\nHomePage.getInitialProps = async ({\n  ctx\n}) => {\n  const data = await getPosts();\n  const dispatch = useDispatch();\n  return {\n    data\n  };\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/nik/projects/js/next-blog/pages/index.tsx"],"names":["useEffect","useDispatch","useSelector","Container","getAllPosts","Link","getPosts","HomePage","data","posts","state","dispatch","handlePopulate","prep","Array","from","Set","console","log","getInitialProps","ctx"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,QAAmC,sBAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAC1B,QAAMC,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAAkBA,KAAK,CAACD,KAAzB,CAAzB;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAG,MAAM;AAC3B,YAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,CAAC,GAAGP,KAAJ,EAAW,GAAGD,IAAd,CAAR,CAAX,CAAb;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAF,MAAAA,QAAQ,CAACP,WAAW,CAACS,IAAD,CAAZ,CAAR;AACD,KAJD;;AAKAD,IAAAA,cAAc;AACf,GAPQ,EAON,EAPM,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAEDD,QAAQ,CAACY,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAC5C,QAAMZ,IAAI,GAAG,MAAMF,QAAQ,EAA3B;AACA,QAAMK,QAAQ,GAAGV,WAAW,EAA5B;AACA,SAAO;AAAEO,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Container } from \"../components/Container\";\nimport { getAllPosts, State } from \"../redux/store/store\";\nimport Link from \"next/link\";\nimport {getPosts} from '../lib/api'\nimport {Posts} from '../lib/types'\n\nfunction HomePage({ data }) {\n  const posts = useSelector((state: State) => state.posts)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const handlePopulate = () => {\n      const prep = Array.from(new Set([...posts, ...data]))\n      console.log(prep)\n      dispatch(getAllPosts(prep));\n    };\n    handlePopulate();\n  }, []);\n  return (\n    <div>\n      <Link href=\"/posts/new\">\n        <a>Create new post</a>\n      </Link>\n      <Container posts={data} />\n    </div>\n  );\n}\n\nHomePage.getInitialProps = async ({ ctx }) => {\n  const data = await getPosts()\n  const dispatch = useDispatch()\n  return { data };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}