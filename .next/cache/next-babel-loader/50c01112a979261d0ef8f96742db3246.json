{"ast":null,"code":"var _jsxFileName = \"/home/nik/projects/js/next-blog/pages/posts/[postId].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { createComment } from \"../../redux/store/store\";\nexport default function Post() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var postId = router.query.postId;\n  var num = +postId;\n\n  var _useState = useState(\"\"),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var data = useSelector(function (state) {\n    return state.posts.find(function (post) {\n      return post.id === num;\n    });\n  });\n  var apiError = useSelector(function (state) {\n    return state.error;\n  });\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(createComment({\n      postId: num,\n      body: body\n    }));\n    setBody(\"\");\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, apiError && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }\n  }, apiError), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, data.title, \", id - \", data.id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, data.body), !data.comments.length ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"No comments yet\") : __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, data.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, comment.body);\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Leave a comment\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: body,\n    onChange: function onChange(e) {\n      return setBody(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Create new comment\")), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Back to home\")));\n}\n\n_s(Post, \"kW4n11DHVr0cecUuP9qDoRS3KaA=\", false, function () {\n  return [useRouter, useSelector, useSelector, useDispatch];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/nik/projects/js/next-blog/pages/posts/[postId].tsx"],"names":["useState","useSelector","useDispatch","useRouter","Link","createComment","Post","router","postId","query","num","body","setBody","data","state","posts","find","post","id","apiError","error","dispatch","handleSubmit","e","preventDefault","title","comments","length","map","comment","target","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAgBC,aAAhB,QAAqC,yBAArC;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAD6B,MAErBK,MAFqB,GAEVD,MAAM,CAACE,KAFG,CAErBD,MAFqB;AAG7B,MAAME,GAAW,GAAG,CAACF,MAArB;;AAH6B,kBAILR,QAAQ,CAAC,EAAD,CAJH;AAAA,MAItBW,IAJsB;AAAA,MAIhBC,OAJgB;;AAK7B,MAAMC,IAAI,GAAGZ,WAAW,CAAC,UAACa,KAAD;AAAA,WACvBA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYR,GAAtB;AAAA,KAAjB,CADuB;AAAA,GAAD,CAAxB;AAGA,MAAMS,QAAQ,GAAGlB,WAAW,CAAC,UAACa,KAAD;AAAA,WAAkBA,KAAK,CAACM,KAAxB;AAAA,GAAD,CAA5B;AACA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,MAAMoB,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAyC;AAC5DA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAChB,aAAa,CAAC;AAAEG,MAAAA,MAAM,EAAEE,GAAV;AAAeC,MAAAA,IAAI,EAAJA;AAAf,KAAD,CAAd,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAJ,CADf,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACY,KADR,aACsBZ,IAAI,CAACK,EAD3B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACF,IAAT,CALF,EAMG,CAACE,IAAI,CAACa,QAAL,CAAcC,MAAf,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACa,QAAL,CAAcE,GAAd,CAAkB,UAACC,OAAD;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACX,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBW,OAAO,CAAClB,IAA9B,CADiB;AAAA,GAAlB,CADH,CATJ,EAeE;AAAM,IAAA,QAAQ,EAAEW,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEX,IADT;AAEE,IAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,aACRX,OAAO,CAACW,CAAC,CAACO,MAAF,CAASC,KAAV,CADC;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,CAfF,EA2BE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA3BF,CADF;AAiCD;;GAjDuBzB,I;UACPH,S,EAIFF,W,EAGIA,W,EACAC,W;;;KATKI,I","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { State, createComment } from \"../../redux/store/store\";\nexport default function Post() {\n  const router = useRouter();\n  const { postId } = router.query;\n  const num: number = +postId;\n  const [body, setBody] = useState(\"\");\n  const data = useSelector((state: State) =>\n    state.posts.find((post) => post.id === num)\n  );\n  const apiError = useSelector((state: State) => state.error);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(createComment({ postId: num, body }));\n    setBody(\"\");\n  };\n  return (\n    <div>\n      {apiError && <p>{apiError}</p>}\n      <h1>\n        {data.title}, id - {data.id}\n      </h1>\n      <p>{data.body}</p>\n      {!data.comments.length ? (\n        <p>No comments yet</p>\n      ) : (\n        <ul>\n          {data.comments.map((comment) => (\n            <li key={comment.id}>{comment.body}</li>\n          ))}\n        </ul>\n      )}\n      <form onSubmit={handleSubmit}>\n        <p>Leave a comment</p>\n        <div>\n          <input\n            value={body}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setBody(e.target.value)\n            }\n          />\n        </div>\n        <button type=\"submit\">Create new comment</button>\n      </form>\n      <Link href=\"/\">\n        <a>Back to home</a>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}